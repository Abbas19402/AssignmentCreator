import Head from "next/head";
import Landing from "../Landing/Landing";
import { useDispatch , useSelector } from "react-redux";
import { getSSR } from "../Redux/StateManager/SSR";
import { GET_ALL_ORDERS } from "../Redux/Order";
import { useEffect } from "react";
import useFetch from "../hooks/useFetch";

export default function Home(props) {
  const userData = useSelector((state) => state.auth.user);
  const dispatch = useDispatch();

  dispatch(getSSR(props));

  const { access_token } = userData;

  const GetMyOrders = async () => {
    const header = {
      Accept: "application/json",
      Authorization: `Bearer ${access_token}`,
    };
    await useFetch("get", "My-Orders", "", header).then((res) => {
      dispatch(GET_ALL_ORDERS(res));
    });
  };
  useEffect(() => {
    GetMyOrders();
  }, []);
  return (
    <>
      <Head>
        <title>Assignment Creator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Landing {...props} />
    </>
  );
}

export async function getServerSideProps(context) {
  const cat = await fetch(
    `${process.env.NEXT_PUBLIC_API_URL}/customer/Get-All-Category`,
    {
      headers: {
        Accept: "application/json",
        Authorization: `${process.env.NEXT_PUBLIC_ASSIGNMENT_TOKEN}`,
      },
    }
  );
  const category = await cat.json();

  const sub = await fetch(
    `${process.env.NEXT_PUBLIC_API_URL}/customer/SubjectWithCategory`,
    {
      headers: {
        Accept: "application/json",
        Authorization: `${process.env.NEXT_PUBLIC_ASSIGNMENT_TOKEN}`,
      },
    }
  );
  const subWithCatagory = await sub.json();

  const company = await fetch(
    `${process.env.NEXT_PUBLIC_API_URL}/cms/Company`,
    {
      headers: {
        Accept: "application/json",
        Authorization: `${process.env.NEXT_PUBLIC_ASSIGNMENT_TOKEN}`,
      },
    }
  );
  const cms = await company.json();

  const home = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/home`, {
    headers: {
      Accept: "application/json",
      Authorization: `${process.env.NEXT_PUBLIC_ASSIGNMENT_TOKEN}`,
    },
  });
  const homeData = await home.json();

  return {
    props: {
      cat: category,
      subWithCat: subWithCatagory,
      company: cms,
      home: homeData,
    },
  };
}
